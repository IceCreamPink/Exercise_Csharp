<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="edit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cv/913L/6sZo/7qdUv9NQB//DRsk/zl/r/9PrvD/TKfk+Rs8U3cAAAAFAAAAAAAAAAAAAAABAAAAoQ4g
        LP8SJzX/Bw0W/yYlZ/9YWPD/X1///11d//9dXf//XV3//11d//9eXv//NjaT/wAAAOcAAADnk31C///b
        dP//2HL//9hy///Ycv//2XP//9x0//DMbP9oVy3/DRER/xEmNP8tZo3mR5zWJkSWzgAAAAAAAAAAAAAA
        AAAAAACMBgUR/y4tfv9GRsH/WFjw/15e//9dXf//XV3//11d//9dXf//XV3//15e//9CQrT/AwML+AsJ
        BPi0mFH//9tz///Ycv//2HL//9hy///Ycv//2HL//9pz//DNbP/Bo1b/gGs2/xMRCfkAAAJnBAkNAAAA
        AAAAAAAAAAAADwAAAMYtLXz/Xl7+/15e//9dXf//XV3//11d//9dXf//XV3//11d//9dXf//XV3//1hY
        8P8REjf/Ny8W//DMbP//2XL//9hy///Ycv//2HL//9hy///Ycv//2HL//9ly///bdP/+2nP/fGk3/wAA
        AMcAAAAQAAAAAAAAAAAAAAAfAgIG4EJCsv9fX///XV3//11d//9eXv//Xl7//11d//9dXf//XV3//11d
        //9dXf//XV3+/x0dWP9ZTCT//tdy///Ycv//2HL//9hy///Ycv//2HL//9hy///Ycv//2HL//9hy///c
        dP+ymVH/BgUD4QAAAB8AAAAAAAAAAAAAABEAAADJLy+C/15e//9eXv//XV3//0tLzP9KSsn/Xl7//15e
        //9fX///XV3//11d//9cXPz/GxtT/1RHIv/81nH//9hy///Ycv//2HL//9hy///Ycv//2HL//9hy///Y
        cv//2nP//9t0/4JuOv8AAADKAAAAEQAAAAAAAAAAAAAAAAAAAGwICBf4MjKK/09P2P9eXv//MjKJ/w0N
        Jf8+Pqn/TEzP/z4+qf9UVOX/Xl7//1VV5v8NDiv/KyQR/+fEaP//2XP//9hy///Ycv//2HL//9hy///Y
        cv//2HL//thy/9i3Yf+KdT7/FxQK+AAAAGwAAAAAAAAAAAAAAAAAAAAAAAAACQAAAHAAAAHXDw8o/ExM
        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
        Q///wAP//8AD///wD///8A////AP///wD/8=
</value>
  </data>
</root>